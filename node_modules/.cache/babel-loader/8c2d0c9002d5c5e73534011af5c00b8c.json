{"ast":null,"code":"export var capitalize = function capitalize(s) {\n  return s && s[0].toUpperCase() + s.slice(1);\n};\nexport var formatDecimal = function formatDecimal(s) {\n  return \"\".concat(parseFloat(s).toFixed(2), \" %\");\n};\nexport var calculateAge = function calculateAge(dateString) {\n  var today = new Date();\n  var dob = new Date(\"1/1/2000\");\n  var age = today.getFullYear() - dob.getFullYear();\n  return age;\n};\nexport var isValidEmail = function isValidEmail(email) {\n  var pattern = /^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i;\n  return pattern.test(email);\n};\nexport var isValidPhoneNumber = function isValidPhoneNumber(phoneNumber) {\n  if (!phoneNumber || phoneNumber.length < 5 || phoneNumber.length > 15) {\n    return false;\n  }\n\n  var pattern = /^-?\\d*\\.?\\d*$/;\n  return pattern.test(phoneNumber);\n};\nexport var isValidUserName = function isValidUserName(username) {\n  if (!username) {\n    return false;\n  }\n\n  return true;\n};","map":{"version":3,"sources":["/Users/I524894/Documents/GitHub/Taxify/src/utils/index.js"],"names":["capitalize","s","toUpperCase","slice","formatDecimal","parseFloat","toFixed","calculateAge","dateString","today","Date","dob","age","getFullYear","isValidEmail","email","pattern","test","isValidPhoneNumber","phoneNumber","length","isValidUserName","username"],"mappings":"AAAA,OAAO,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAAAC,CAAC,EAAI;AAC7B,SAAOA,CAAC,IAAIA,CAAC,CAAC,CAAD,CAAD,CAAKC,WAAL,KAAqBD,CAAC,CAACE,KAAF,CAAQ,CAAR,CAAjC;AACD,CAFM;AAIP,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAH,CAAC,EAAI;AAChC,mBAAUI,UAAU,CAACJ,CAAD,CAAV,CAAcK,OAAd,CAAsB,CAAtB,CAAV;AACD,CAFM;AAIP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,UAAU,EAAI;AACxC,MAAIC,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACA,MAAIC,GAAG,GAAG,IAAID,IAAJ,CAAS,UAAT,CAAV;AACA,MAAIE,GAAG,GAAGH,KAAK,CAACI,WAAN,KAAsBF,GAAG,CAACE,WAAJ,EAAhC;AACA,SAAOD,GAAP;AACD,CALM;AAOP,OAAO,IAAME,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AACnC,MAAMC,OAAO,GAAG,sCAAhB;AACA,SAAOA,OAAO,CAACC,IAAR,CAAaF,KAAb,CAAP;AACD,CAHM;AAKP,OAAO,IAAMG,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,WAAW,EAAI;AAC/C,MAAI,CAACA,WAAD,IAAgBA,WAAW,CAACC,MAAZ,GAAqB,CAArC,IAA0CD,WAAW,CAACC,MAAZ,GAAqB,EAAnE,EAAuE;AACrE,WAAO,KAAP;AACD;;AACD,MAAMJ,OAAO,GAAG,eAAhB;AACA,SAAOA,OAAO,CAACC,IAAR,CAAaE,WAAb,CAAP;AACD,CANM;AAQP,OAAO,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,QAAQ,EAAI;AACzC,MAAI,CAACA,QAAL,EAAe;AACb,WAAO,KAAP;AACD;;AACD,SAAO,IAAP;AACD,CALM","sourcesContent":["export const capitalize = s => {\n  return s && s[0].toUpperCase() + s.slice(1);\n};\n\nexport const formatDecimal = s => {\n  return `${parseFloat(s).toFixed(2)} %`;\n};\n\nexport const calculateAge = dateString => {\n  var today = new Date();\n  var dob = new Date(\"1/1/2000\");\n  var age = today.getFullYear() - dob.getFullYear();\n  return age;\n};\n\nexport const isValidEmail = email => {\n  const pattern = /^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i;\n  return pattern.test(email);\n};\n\nexport const isValidPhoneNumber = phoneNumber => {\n  if (!phoneNumber || phoneNumber.length < 5 || phoneNumber.length > 15) {\n    return false;\n  }\n  const pattern = /^-?\\d*\\.?\\d*$/;\n  return pattern.test(phoneNumber);\n};\n\nexport const isValidUserName = username => {\n  if (!username) {\n    return false;\n  }\n  return true;\n};\n"]},"metadata":{},"sourceType":"module"}